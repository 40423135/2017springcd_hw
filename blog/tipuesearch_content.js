var tipuesearch = {"pages":[{"tags":"misc","title":"About","url":"./pages/about/","text":"2016Fall 修課成員網誌"},{"tags":"hw","title":"第十五周作業","url":"./di-shi-wu-zhou-zuo-ye.html","text":"1.請以 W15 練習為網誌標題, 800x600 為畫布大小, 在畫布正中央畫一個半徑為 250 畫素, 壓力角 20, 齒數為 36 齒, 且只有上半齒形的漸開線正齒輪輪廓. window.onload=function(){ // 設定 data/py 為共用程式路徑 brython({debug:1, pythonpath:['./../data/py']}); } from browser import document as doc import math # deg 為角度轉為徑度的轉換因子 deg = math.pi/180. # 定義 Spur 類別 class Spur(object): def __init__(self, ctx): self.ctx = ctx def create_line(self, x1, y1, x2, y2, width=3, fill=\"red\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() # # 定義一個繪正齒輪的繪圖函式 # midx 為齒輪圓心 x 座標 # midy 為齒輪圓心 y 座標 # rp 為節圓半徑, n 為齒數 # pa 為壓力角 (deg) # rot 為旋轉角 (deg) # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷 def Gear(self, midx, midy, rp, n=20, pa=20, color=\"black\"): # 齒輪漸開線分成 15 線段繪製 imax = 15 # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線 self.create_line(midx, midy, midx, midy-rp) # 畫出 rp 圓, 畫圓函式尚未定義 #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2) # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數 # 模數也就是齒冠大小 a=2*rp/n # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍 d=2.5*rp/n # ra 為齒輪的外圍半徑 ra=rp+a # 畫出 ra 圓, 畫圓函式尚未定義 #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1) # rb 則為齒輪的基圓半徑 # 基圓為漸開線長齒之基準圓 rb=rp*math.cos(pa*deg) # 畫出 rb 圓 (基圓), 畫圓函式尚未定義 #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1) # rd 為齒根圓半徑 rd=rp-d # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義 #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1) # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小 # 將圓弧分成 imax 段來繪製漸開線 # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: dr = (ra-rd)/imax else: dr=(ra-rb)/imax # tan(pa*deg)-pa*deg 為漸開線函數 sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg for j in range(n): ang=-2.*j*math.pi/n+sigma ang2=2.*j*math.pi/n+sigma lxd=midx+rd*math.sin(ang2-2.*math.pi/n) lyd=midy-rd*math.cos(ang2-2.*math.pi/n) for i in range(imax+1): # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(alpha-ang) ypt=r*math.cos(alpha-ang) xd=rd*math.sin(-ang) yd=rd*math.cos(-ang) # i=0 時, 繪線起點由齒根圓上的點, 作為起點 if(i==0): last_x = midx+xd last_y = midy-yd # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點 self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) # 最後一點, 則為齒頂圓 if(i==imax): lfx=midx+xpt lfy=midy-ypt last_x = midx+xpt last_y = midy-ypt # the line from last end of dedendum point to the recent # end of dedendum point # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標 # 下列為齒根圓上用來近似圓弧的直線 self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color) for i in range(imax+1): # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(ang2-alpha) ypt=r*math.cos(ang2-alpha) xd=rd*math.sin(ang2) yd=rd*math.cos(ang2) # i=0 時, 繪線起點由齒根圓上的點, 作為起點 if(i==0): last_x = midx+xd last_y = midy-yd # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點 self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) # 最後一點, 則為齒頂圓 if(i==imax): rfx=midx+xpt rfy=midy-ypt last_x = midx+xpt last_y = midy-ypt # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標 # 下列為齒頂圓上用來近似圓弧的直線 self.create_line(lfx,lfy,rfx,rfy,fill=color) canvas = doc['onegear'] ctx = canvas.getContext(\"2d\") x = (canvas.width)/2 y = (canvas.height)/2 r = 0.8*(canvas.height/2) # 齒數 n = 36 # 壓力角 pa = 20 Spur(ctx).Gear(x, y, r, n, pa, \"blue\") # 以下列出 W11 2B 未出席人數 data = open(\"./../data/w11/2b0503.txt\", encoding=\"utf-8\").read() count = 0 # 去掉前面兩列 student = data.split(\"\\n\")[2:] for i in range(len(student)): each = student[i].split(\"\\t\") if each[1] != \"出席\": count = count + 1 #print(count) div = doc[\"onegear_div\"] div <= \"2b: \" + str(count) + \"/\" + str(len(student))"},{"tags":"hw","title":"第十三周作業","url":"./di-shi-san-zhou-zuo-ye.html","text":"介紹齒輪 節面：虛擬之滾動圓筒（或錐）表面，其上可以代換不同輪齒。 節圓：節面之正剖面。 齒頂圓：齒端所構成之圓，在齒輪之正剖面。 齒根圓：齒間所構成之圓，在齒輪之正剖面。 齒高：分度圓與齒冠圓間之徑向距離。 齒根：分度圓與齒根圓間之徑向距離。 頂隙：某齒輪之齒根與搭配齒輪之齒冠間之距離。 齒面：在節面以外部份之齒面。 齒腹：在節面以內部份之齒面。 圓周齒厚（亦稱齒厚）：齒在分度圓上之厚度，它是弧長，不是直線長度。 齒距：在節圓上相鄰兩齒之距離。 側隙：為齒輪圓周齒厚與配對之齒輪之齒間之差。理論上側隙應為零，但在實際上為克服製造上之誤差及熱脹的問題，防止運轉時，配對的齒與齒間發生排擠，仍必須存在某程度之空隙。側隙之調整可加大中心矩或在切削時多切除一部份。 周節（齒距，p）：齒寬度與齒間寬度，在節圓上量取。 徑節（P）：以英制為單位，即為節徑上每吋之齒數。齒輪上之齒數不一定為整數，一般常取整數。 模數（m）：分度圓直徑除以齒數，採用SI公制。m=d/z，d以毫米為單位。節徑通常以吋表示；故前面的狀況模數為徑節之倒數，不過所用之單位必須經過轉換。 過渡曲線：輪齒與齒根圓連接過渡處的曲線（端面上看）。 小齒輪：任何相配齒輪之最小齒輪。較大之齒輪則稱為齒輪。 傳動比：單位時間內，驅動（或輸入）齒輪與被動齒輪（輸出）之迴轉數比。 節點：一對相配齒輪之節圓之相切點。 共切點：在節點處與節圓相切之線。 作用線：相配齒輪外形在接觸點之法線。 接觸線：相配齒輪外形接觸點之軌跡。 壓力角（α）：齒輪上某個圓之共切線與通過齒接觸點法線之交角。亦即作用線與共同切線之交角。通常取分度圓上的壓力角為標準值，並稱為分度圓壓力角。 中心距（a）：兩軸之中心距離，以前例a=（d1+d2）/2。【未變位時的中心距】 基圓（Base circle）：虛擬圓，漸開線的發生圓，決定了漸開線的形狀。"},{"tags":"hw","title":"第十二周作業","url":"./di-shi-er-zhou-zuo-ye.html","text":"介紹齒輪 節面：虛擬之滾動圓筒（或錐）表面，其上可以代換不同輪齒。 節圓：節面之正剖面。 齒頂圓：齒端所構成之圓，在齒輪之正剖面。 齒根圓：齒間所構成之圓，在齒輪之正剖面。 齒高：分度圓與齒冠圓間之徑向距離。 齒根：分度圓與齒根圓間之徑向距離。 頂隙：某齒輪之齒根與搭配齒輪之齒冠間之距離。 齒面：在節面以外部份之齒面。 齒腹：在節面以內部份之齒面。 圓周齒厚（亦稱齒厚）：齒在分度圓上之厚度，它是弧長，不是直線長度。 齒距：在節圓上相鄰兩齒之距離。 側隙：為齒輪圓周齒厚與配對之齒輪之齒間之差。理論上側隙應為零，但在實際上為克服製造上之誤差及熱脹的問題，防止運轉時，配對的齒與齒間發生排擠，仍必須存在某程度之空隙。側隙之調整可加大中心矩或在切削時多切除一部份。 周節（齒距，p）：齒寬度與齒間寬度，在節圓上量取。 徑節（P）：以英制為單位，即為節徑上每吋之齒數。齒輪上之齒數不一定為整數，一般常取整數。 模數（m）：分度圓直徑除以齒數，採用SI公制。m=d/z，d以毫米為單位。節徑通常以吋表示；故前面的狀況模數為徑節之倒數，不過所用之單位必須經過轉換。 過渡曲線：輪齒與齒根圓連接過渡處的曲線（端面上看）。 小齒輪：任何相配齒輪之最小齒輪。較大之齒輪則稱為齒輪。 傳動比：單位時間內，驅動（或輸入）齒輪與被動齒輪（輸出）之迴轉數比。 節點：一對相配齒輪之節圓之相切點。 共切點：在節點處與節圓相切之線。 作用線：相配齒輪外形在接觸點之法線。 接觸線：相配齒輪外形接觸點之軌跡。 壓力角（α）：齒輪上某個圓之共切線與通過齒接觸點法線之交角。亦即作用線與共同切線之交角。通常取分度圓上的壓力角為標準值，並稱為分度圓壓力角。 中心距（a）：兩軸之中心距離，以前例a=（d1+d2）/2。【未變位時的中心距】 基圓（Base circle）：虛擬圓，漸開線的發生圓，決定了漸開線的形狀。"},{"tags":"hw","title":"第十一周作業","url":"./di-shi-yi-zhou-zuo-ye.html","text":"協同 2D 正齒輪傳動繪圖"},{"tags":"hw","title":"期中自評作業","url":"./qi-zhong-zi-ping-zuo-ye.html","text":"心得: 透過老師的上課影片教學,可以讓我了解到 v-rep如何分解零件、設置旋轉軸 看老師上課做滿難的，自己看影片實際跟著做練習了一次!"},{"tags":"hw","title":"第五周作業","url":"./di-wu-zhou-zuo-ye.html","text":"利用v-rep設定單連桿運動 利用v-rep設定單連桿運動影片 v rep單連桿影片 from 40423135 on Vimeo . 心得: 透過老師的上課影片教學,可以讓我了解到 v-rep如何分解零件、設置旋轉軸 看老師上課做滿難的，自己看影片實際跟著做練習了一次!"},{"tags":"hw","title":"第四周作業","url":"./di-si-zhou-zuo-ye.html","text":"利用網誌與簡報說明安裝或使用 Hyperworks 套件過程與心得 - 課程結束前, 希望能夠使用 Hyperworks 進行連桿機構零件的應力分析與機構運動模擬. 平面四連桿機構的運動路徑方程式推導與網際 2D 繪圖, 方程式推導以 sympy 完成, 而 2D 繪圖則以 Brython 在各組網誌中完成. 先了解如何推導四連桿機構的運動方程式, 然後在各組網誌中完成靜態繪圖與動態模擬. 為各班各組在 https://mde2a2.kmol.info 主機上建立 cdbg1~ cdbg8, 以及 cdag1 ~ cdag8 等線上 Fossil SCM 倉儲, 用來管理各組協同產品設計實習過程中的純文件檔案 單連桿製作及導入v-rep 單連桿零件一 單連桿零件一繪製影片 導入v-rep 零件一 from 40423135 on Vimeo . 單連桿零件二 單連桿零件二繪製影片 導入v-rep 零件二 from 40423135 on Vimeo . 單連桿零件三 單連桿零件三繪製影片 導入v-rep 零件三.mp4 from 40423135 on Vimeo . 單連桿組裝完成圖 單連桿組裝影片 組合 from 40423135 on Vimeo . 單連桿導入v-rep影片 導入v-rep from 40423135 on Vimeo . 網際動態模擬 window.onload=function(){ brython({debug:1, pythonpath:['./../data/py']}); } from browser import window cango2d = window.Cango2D.new shapedefs = window.shapeDefs obj2d = window.Obj2D.new tweener = window.Tweener.new cgo = cango2d(\"robot\") # 清除畫面 cgo.clearCanvas(\"lightyellow\") cgo.setWorldCoords(-50, -50, 300) # 加上基軸與第一桿 # 畫筆移到 -20, -10, 畫直線到 -10,-10 以及 -10,0 standData = ['M', -20,-10, 'L', -10,-10, -10,0, 'A', 10,10,0,0,0,10,0, 'L',10,-10, 20,-10, 20,-40, -20,-40,'z'] stand = obj2d(standData, \"SHAPE\", { \"fillColor\":'darkgray', \"border\": True, \"strokeColor\": \"#222222\" }) axle0 = obj2d(shapedefs.circle(10), \"SHAPE\", { \"fillColor\":'gray', \"border\": True, \"strokeColor\": \"#222222\" }) armGrp = cgo.createGroup2D(stand, axle0) segData = ['M',0,-8, 'A',8,8,0,0,0,0,8, 'L',50,8, 'A',8,8,0,0,0,50,-8, 'Z'] seg1 = obj2d(segData, \"SHAPE\", { \"fillColor\":'darkGray', \"border\": True, \"strokeColor\": \"#222222\", \"zIndex\": -1 }) # 利用 zIndex 決定疊層的先後次序 axle1 = obj2d(shapedefs.circle(8), \"SHAPE\", { \"fillColor\":'gray', \"border\": True, \"strokeColor\": \"#222222\", \"zIndex\": 1 }) axle1.translate(50, 0) seg1Grp = cgo.createGroup2D(seg1, axle1) armGrp.addObj(seg1Grp) # 加上第二軸 seg2 = obj2d(segData, \"SHAPE\", { \"fillColor\":'darkGray', \"border\": True, \"strokeColor\": \"#222222\", \"zIndex\": -1 }) axle2 = obj2d(shapedefs.circle(8), \"SHAPE\", { \"fillColor\":'gray', \"border\": True, \"strokeColor\": \"#222222\", \"zIndex\": 1 }) axle2.translate(50, 0) seg2Grp = cgo.createGroup2D(seg2, axle2) cgo.render(seg2Grp) # 請注意 seg2Grp 加上 seg1Grp 物件上 seg1Grp.addObj(seg2Grp) seg3 = obj2d(segData, \"SHAPE\", { 'fillColor':'darkGray', 'border': True, 'strokeColor': \"#222222\", 'zIndex': -1 }) axle3 = obj2d(shapedefs.circle(6), \"SHAPE\", { 'fillColor':'gray', 'border': True, 'strokeColor': \"#222222\", 'zIndex': 1 }) axle3.translate(50, 0) seg3Grp = cgo.createGroup2D(seg3, axle3) seg2Grp.addObj(seg3Grp) seg4Data = ['M',0,-6, 'A',6,6,0,0,0,0,6, 'L',40,6, 40,12, 50,12, 50,-12, 40,-12, 40,-6, 'Z'] seg4 = obj2d(seg4Data, \"SHAPE\", { 'fillColor':'darkGray', 'border': True, 'strokeColor': \"#222222\", 'zIndex': -1 }) seg3Grp.addObj(seg4) # setup animation animData = {'s1': [0, 80, 45, 0], 's2': [0, -60, -60, 0], 's3': [0, -90, 0, 90, 0], 's4': [0, 30, -90, 0]} armTwnr = tweener(0, 3500, 'loop') def initArm(opts): seg2Grp.transform.translate(50,0) seg3Grp.transform.translate(50,0) seg4.transform.translate(50,0) def armPathFn(time, opts): seg1Rot = armTwnr.getVal(time, opts.s1) seg2Rot = armTwnr.getVal(time, opts.s2) seg3Rot = armTwnr.getVal(time, opts.s3) seg4Rot = armTwnr.getVal(time, opts.s4) seg1Grp.transform.rotate(seg1Rot) seg2Grp.transform.rotate(seg2Rot) seg2Grp.transform.translate(50,0) seg3Grp.transform.rotate(seg3Rot) seg3Grp.transform.translate(50,0) seg4.transform.rotate(seg4Rot) seg4.transform.translate(50,0) cgo.animate(armGrp, initArm, armPathFn, animData) cgo.playAnimation() 心得:這周畫了跟第一周很相似的單連桿，因為有第一次的練習所以這次用solvespace話就很快，也練習了導入v-rep"},{"tags":"hw","title":"第三周作業","url":"./di-san-zhou-zuo-ye.html","text":"翻譯影片 hyperworks3 hyperworks3 from 虎尾科大機械設計工程 on Vimeo . Optistuct's one of our focus area Optistuct是我們的重點領域之一 is nonlinear large deformation analysis and in 2017 we added nonlinear transient analysis the main purpose was to couple Acusolve and structure interaction but also one development that happens during the last year came 是非線性大變形分析，在2017年，我們添加了非線性瞬態分析，其主要目的是耦合Acusolve和結構的相互作用，但也發生在去年發生的一個發展 out these lights and different point releases and it's all really maturing in 2017 is our contact analysis we have different ways of defining large sliding contact and things like that the fast contact analysis for for small 這些燈和不同點的釋放，這一切都在2017年真正成熟是我們的聯繫分析我們有不同的方式來定義大滑動接觸和事情，如快速接觸分析為小 deformation is blazing fast at the very simple idea that makes a solution very fast and that adds to optistruct as really a leading nonlinear structural solver our two major optimization packages are optistruct 變形是快速的，在一個非常簡單的想法，使解決方案非常快，並增加了optistruct作為真正的領先的非線性結構解算器我們的兩個主要優化包是光 for structural optimization as a huge multidisciplinary component tools and hyperstudy for general optimization work on multidisciplinary optimization Optistruct spend a lot of time continuing the 結構優化作為一個巨大的多學科組件工具和hyperstudy對多學科優化的一般優化工作Optistruct花費大量的時間繼續 development for topology optimization and we have the wave topology optimization we kept on working on the manufacturing solution to designed optimization the multimodal optimization is really maturing and we find more and 拓撲優化的開發，我們有波拓撲優化，我們繼續致力於製造解決方案設計優化多模態優化是真正成熟的，我們發現更多， more applications where that help our goal is actually to include all the physics in the optimizations of the team right now is working on optimization for nonlinear problems and so on and then hyperstudy on the other hand is going 更多的應用程序，其中幫助我們的目標是實際上包括所有的物理在團隊的優化現在是工作在非線性問題的優化等等，然後hyperstudy另一方面是 through a new transformation of the user experience or the user experience has changed a few years back but we are now trying to make it much more easy to use by hiding a lot of the advanced functionality to the regular users and 通過用戶體驗的新轉型或用戶體驗已經改變了幾年，但是我們現在正試圖通過隱藏許多高級功能給常規用戶更容易使用， depending on the level of expertise or depending on the job that the user has to do they can customize the user experience he added a few new connection one of them is a flux connection such as the electromagnetic code that we just 取決於專業水平或根據用戶必須做的工作，他們可以定制用戶體驗他添加了一些新的連接，其中一個是通量連接，如電磁代碼，我們只是 acquired for a low frequency electromagnetic we can now take a flux database and put it into hyper study into your study as well 獲得了一個低頻電磁，我們現在可以採取通量數據庫，並把它進入高速研究"},{"tags":"hw","title":"第二周作業","url":"./di-er-zhou-zuo-ye.html","text":"利用solvespace組立及v-rep應用 完成圖 HTML 作業心得"},{"tags":"hw","title":"第一周作業","url":"./di-yi-zhou-zuo-ye.html","text":"利用solvespace及onshape組裝四連桿機構 零件1 30公分連桿 零件1 繪製影片 solvespace連桿零件一 from 40423135 on Vimeo . 零件2 50公分連桿 零件2 繪製影片 solvespace連桿零件二 from 40423135 on Vimeo . 零件3 60公分連桿 零件3 繪製影片 solvespace連桿零件三 from 40423135 on Vimeo . solvespace組裝影片 心得 第一周作業畫了上學期學過的solvespace 有點久沒有畫所以畫起來卡卡的 不過畫完這三個試圖後感覺也差不多找回來了 繼續努力 加油"}]};